generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id           String    @id
  accountId    String
  providerId   String
  userId       String
  accessToken  String?
  refreshToken String?
  idToken      String?
  expiresAt    DateTime? @db.Date
  password     String?
  user         user      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model session {
  id        String   @id
  expiresAt DateTime @db.Date
  ipAddress String?
  userAgent String?
  userId    String
  user      user     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            String    @id
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  address       String?
  city          String?
  country       String?
  postalCode    String?
  state         String?
  createdAt     DateTime  @db.Date
  updatedAt     DateTime  @db.Date
  property     property[]
  account       account[]
  session       session[]
}

model verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime  @db.Date
  createdAt  DateTime? @db.Date
}


model property {
  id String @id
  address String
  city String
  country String
  postalCode String
  state String
  title String
  images String[]
  userId String
  user         user      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // Rental information
  rentDetails Json? // { baseRent: number, charges: number }
  currency    String @default("EUR")
  paymentFrequency String @default("monthly") // "biweekly" | "monthly" | "quarterly" | "yearly"
  depositAmount Float?
  rentedSince DateTime?
  isFurnished Boolean @default(false)

  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt @default(now())
}